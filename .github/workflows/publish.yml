name: 'publish'
on:
  push:
    branches:
      - main

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: "recursive"
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'

      - name: setup homebrew
        if: matrix.platform == 'macos-latest'
        uses: Homebrew/actions/setup-homebrew@master

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: use Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
          cache-on-failure: true

      - name: install opencv (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install opencv --params "/InstallationPath:C:\"

      - name: install opencv (macos only)
        if: matrix.platform == 'macos-latest'
        run: |
          brew install opencv@4
        env: 
          HOMEBREW_NO_AUTO_UPDATE: true
          HOMEBREW_NO_INSTALL_CLEANUP: true

      - name: install frontend dependencies
        run: yarn install # change this to npm or pnpm depending on which one you use
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OpenCV_DIR: ${{ matrix.platform == 'windows-latest' && 'C:\\opencv\\build' }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: latest # the action automatically replaces \_\_VERSION\_\_ with the app version
          releaseName: 'MuskelAnalyse v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: false
          prerelease: false